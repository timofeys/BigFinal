

Процедура ОбработкаПроведения(Отказ, Режим)
	
	Движения.ДвижениеМатериалов.Записывать = Истина;
	Движения.ДвижениеМатериалов.БлокироватьДляИзменения = Истина;
	Движения.ДвижениеМатериалов.Очистить();
	
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		Движение = Движения.ДвижениеМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Расход;
		Движение.Период = Дата;
		Если ЗначениеЗаполнено(ОтправительМОЛ) тогда 
			Движение.МОЛ = ОтправительМОЛ;
			ПеременнаяДляТекстаЗапроса = "МОЛ = &МОЛ";
		Иначе
			Движение.Склад = ОтправительСклад;
			ПеременнаяДляТекстаЗапроса = "Склад = &Склад";
		КонецЕсли;
		Движение.Материал = ТекСтрокаМатериалы.Материал;
		Движение.Количество = ТекСтрокаМатериалы.Количество;
	КонецЦикла;
	
	Движения.Записать();
	
	ЗапросОтрицательныхОстатков = Новый Запрос;
	ЗапросОтрицательныхОстатков.Текст = "ВЫБРАТЬ
	 |	ДвижениеМатериаловОстатки.Склад,
	 |	ДвижениеМатериаловОстатки.Материал,
	 |	ДвижениеМатериаловОстатки.Материал.Представление,
	 |	ДвижениеМатериаловОстатки.КоличествоОстаток
	 |ИЗ
	 |	РегистрНакопления.ДвижениеМатериалов.Остатки(
	 |			,"
	 + ПеременнаяДляТекстаЗапроса +
	 "	И Материал В (&Материал)) КАК ДвижениеМатериаловОстатки
	 |ГДЕ
	 |	ДвижениеМатериаловОстатки.КоличествоОстаток < 0";
	 Если ЗначениеЗаполнено(ОтправительСклад) тогда
		 ЗапросОтрицательныхОстатков.УстановитьПараметр("Склад",ОтправительСклад);
	 Иначе
		 ЗапросОтрицательныхОстатков.УстановитьПараметр("МОЛ",ОтправительМОЛ);
	 КонецЕсли;
	 ЗапросОтрицательныхОстатков.УстановитьПараметр("Материал",Материалы.ВыгрузитьКолонку("Материал"));
	 РезЗапроса = ЗапросОтрицательныхОстатков.Выполнить();
	 Если НЕ РезЗапроса.Пустой() тогда
	     Отказ = Истина;
	 Выборка = РезЗапроса.Выбрать();
	 Сообщение = Новый СообщениеПользователю;
	 Пока Выборка.Следующий() Цикл 
		Сообщение.Текст = "Остатка не хватает" + Выборка.МатериалПредставление + " в количестве - " + Выборка.КоличествоОстаток;
		Сообщение.Сообщить();
	КонецЦикла;
КонецЕсли;

Если Отказ Тогда
	Возврат;
КонецЕсли;	
	Движения.ДвижениеМатериалов.Записывать = Истина;
//	Движения.ДвижениеМатериалов.Очистить();
	Для Каждого ТекСтрокаМатериалы Из Материалы Цикл
		Движение = Движения.ДвижениеМатериалов.Добавить();
		Движение.ВидДвижения = ВидДвиженияНакопления.Приход;
		Движение.Период = Дата;
		Если ЗначениеЗаполнено(ПолучательМОЛ) тогда 
			Движение.МОЛ = ПолучательМОЛ;
		Иначе
			Движение.Склад = ПолучательСклад;
		КонецЕсли;

		Движение.Материал = ТекСтрокаМатериалы.Материал;
		Движение.Количество = ТекСтрокаМатериалы.Количество;
	КонецЦикла;
КонецПроцедуры

Процедура ПередЗаписью(Отказ, РежимЗаписи, РежимПроведения)
	ЗаполнитьВидДокумента();
КонецПроцедуры

Процедура ЗаполнитьВидДокумента()
	Если ЗначениеЗаполнено(ОтправительМОЛ) И ЗначениеЗаполнено(ПолучательМОЛ)тогда
		ВидДокумента = Перечисления.ВидДокументаДвижения.Перемещ_МОЛМОЛ;
	ИначеЕсли ЗначениеЗаполнено(ОтправительМОЛ) И ЗначениеЗаполнено(ПолучательСклад) тогда
		ВидДокумента = Перечисления.ВидДокументаДвижения.Перемещ_МОЛКладовая;
	ИначеЕсли ЗначениеЗаполнено(ОтправительСклад) И ЗначениеЗаполнено(ПолучательСклад) тогда
		ВидДокумента = Перечисления.ВидДокументаДвижения.Перемещ_КладоваяКладовая;
	ИначеЕсли ЗначениеЗаполнено(ОтправительСклад) И ЗначениеЗаполнено(ПолучательМОЛ) тогда
		ВидДокумента = Перечисления.ВидДокументаДвижения.Перемещ_КладоваяМОЛ;
	КонецЕсли;
КонецПроцедуры	
